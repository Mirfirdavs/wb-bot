from aiogram import F
from aiogram.types import CallbackQuery, Message
from aiogram.fsm.context import FSMContext

from bot.dispatcher import dp
from services.session_manager import session_manager
from keyboards.factories import KeyboardFactory
from states.analytics import AnalyticsState


@dp.callback_query(F.data.startswith("tax_"))
async def process_tax_selection(callback: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –Ω–∞–ª–æ–≥–æ–≤–æ–π —Å—Ç–∞–≤–∫–∏"""
    session = session_manager.get_session(callback.from_user.id)

    if callback.data == "tax_other":
        await state.set_state(AnalyticsState.waiting_for_tax)
        await callback.message.edit_text(
            "üíµ <b>–í–≤–µ–¥–∏—Ç–µ –≤–∞—à—É –Ω–∞–ª–æ–≥–æ–≤—É—é —Å—Ç–∞–≤–∫—É –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö:</b>\n"
            "–ù–∞–ø—Ä–∏–º–µ—Ä: <code>5.5</code> –∏–ª–∏ <code>6</code>"
        )
    else:
        tax_rate = float(callback.data.split("_")[1])
        session.tax_rate = tax_rate
        await state.set_state(AnalyticsState.waiting_for_main_file)
        await callback.message.edit_text(
            f"‚úÖ <b>–ù–∞–ª–æ–≥–æ–≤–∞—è —Å—Ç–∞–≤–∫–∞:</b> {tax_rate}%\n\n"
            "üìÅ <b>–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –æ—Å–Ω–æ–≤–Ω–æ–π –æ—Ç—á–µ—Ç –∏–∑ –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞ Wildberries:</b>\n"
            "‚Ä¢ –≠—Ç–æ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å Excel-—Ñ–∞–π–ª —Å –¥–∞–Ω–Ω—ã–º–∏ –æ –ø—Ä–æ–¥–∞–∂–∞—Ö\n"
            "‚Ä¢ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: 10MB",
            reply_markup=None,
        )

    await callback.answer()


@dp.message(AnalyticsState.waiting_for_tax)
async def process_custom_tax(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–π –Ω–∞–ª–æ–≥–æ–≤–æ–π —Å—Ç–∞–≤–∫–∏"""
    session = session_manager.get_session(message.from_user.id)

    try:
        tax_rate = float(message.text.replace(",", "."))
        if tax_rate <= 0 or tax_rate >= 100:
            raise ValueError

        session.tax_rate = tax_rate
        await state.set_state(AnalyticsState.waiting_for_main_file)
        await message.answer(
            f"‚úÖ <b>–ù–∞–ª–æ–≥–æ–≤–∞—è —Å—Ç–∞–≤–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞:</b> {tax_rate}%\n\n"
            "üìÅ <b>–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –æ—Å–Ω–æ–≤–Ω–æ–π –æ—Ç—á–µ—Ç –∏–∑ –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞ Wildberries:</b>",
            reply_markup=None,
        )

    except ValueError:
        await message.answer(
            "‚ùå <b>–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç!</b>\n"
            "–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ 100, –Ω–∞–ø—Ä–∏–º–µ—Ä: <code>6.5</code>"
        )
